{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Developer/myPortfolio/src/components/Projects/Projects.component.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { TweenMax, Power3, TimelineLite } from \"gsap\"; //import $ from \"jquery\";\n// SwiperJS\n//import { Swiper, SwiperSlide } from \"swiper/react\";\n// import Swiper core and required components\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\"; //Swiper styles\n// import \"swiper/swiper.scss\";\n// import \"swiper/components/navigation/navigation.scss\";\n// import \"swiper/components/pagination/pagination.scss\";\n// import \"swiper/components/scrollbar/scrollbar.scss\";\n\nimport styles from \"./Projects.module.scss\"; // install Swiper components\n//SwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\n\nconst Projects = () => {\n  _s();\n\n  var title1 = useRef(null);\n  var title2 = useRef(null);\n  var title3 = useRef(null);\n  var titleSpan1 = useRef(null);\n  var titleSpan2 = useRef(null);\n  var titleSpan3 = useRef(null);\n  var num1 = useRef(null);\n  var num2 = useRef(null);\n  var num3 = useRef(null);\n  useEffect(() => {// TweenMax.from(\n    //   [\n    //     title1,\n    //     title2,\n    //     title2,\n    //     titleSpan1,\n    //     titleSpan2,\n    //     titleSpan3,\n    //     num1,\n    //     num2,\n    //     num3,\n    //   ],\n    //   1.5,\n    //   {\n    //     y: 200,\n    //   }\n    // );\n  });\n  return __jsx(\"div\", {\n    className: styles.projects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"Projects\");\n};\n\n_s(Projects, \"DbJmLa3siZGZ7Eab3e2Trf0+f7w=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/mac/Developer/myPortfolio/src/components/Projects/Projects.component.jsx"],"names":["React","useEffect","useRef","useState","TweenMax","Power3","TimelineLite","SwiperCore","Navigation","Pagination","Scrollbar","A11y","styles","Projects","title1","title2","title3","titleSpan1","titleSpan2","titleSpan3","num1","num2","num3","projects"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,YAA3B,QAA+C,MAA/C,C,CACA;AAEA;AACA;AAEA;;AACA,OAAOC,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,QAAoE,QAApE,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;AACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,MAAIC,MAAM,GAAGZ,MAAM,CAAC,IAAD,CAAnB;AACA,MAAIa,MAAM,GAAGb,MAAM,CAAC,IAAD,CAAnB;AACA,MAAIc,MAAM,GAAGd,MAAM,CAAC,IAAD,CAAnB;AACA,MAAIe,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIgB,UAAU,GAAGhB,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIiB,UAAU,GAAGjB,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIkB,IAAI,GAAGlB,MAAM,CAAC,IAAD,CAAjB;AACA,MAAImB,IAAI,GAAGnB,MAAM,CAAC,IAAD,CAAjB;AACA,MAAIoB,IAAI,GAAGpB,MAAM,CAAC,IAAD,CAAjB;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAlBQ,CAAT;AAoBA,SACE;AAAK,IAAA,SAAS,EAAEW,MAAM,CAACW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAiGD,CAhID;;GAAMV,Q;;KAAAA,Q;AAkIN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { TweenMax, Power3, TimelineLite } from \"gsap\";\n//import $ from \"jquery\";\n\n// SwiperJS\n//import { Swiper, SwiperSlide } from \"swiper/react\";\n\n// import Swiper core and required components\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\n\n//Swiper styles\n// import \"swiper/swiper.scss\";\n// import \"swiper/components/navigation/navigation.scss\";\n// import \"swiper/components/pagination/pagination.scss\";\n// import \"swiper/components/scrollbar/scrollbar.scss\";\n\nimport styles from \"./Projects.module.scss\";\n\n// install Swiper components\n//SwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\n\nconst Projects = () => {\n  var title1 = useRef(null);\n  var title2 = useRef(null);\n  var title3 = useRef(null);\n  var titleSpan1 = useRef(null);\n  var titleSpan2 = useRef(null);\n  var titleSpan3 = useRef(null);\n  var num1 = useRef(null);\n  var num2 = useRef(null);\n  var num3 = useRef(null);\n\n  useEffect(() => {\n    // TweenMax.from(\n    //   [\n    //     title1,\n    //     title2,\n    //     title2,\n    //     titleSpan1,\n    //     titleSpan2,\n    //     titleSpan3,\n    //     num1,\n    //     num2,\n    //     num3,\n    //   ],\n    //   1.5,\n    //   {\n    //     y: 200,\n    //   }\n    // );\n  });\n\n  return (\n    <div className={styles.projects}>\n      {/* <div id={styles.projectText}>\n        <h1>Projects</h1>\n        <p>\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Est, ipsum\n          deleniti! Autem, at. Blanditiis, ab minima dicta, quod iste quae\n          aperiam distinctio assumenda\n        </p>\n      </div>\n      <div className={styles.projectContent}>\n        <Swiper\n          spaceBetween={0}\n          initialSlide={0}\n          effect={\"slide\"}\n          slidesPerView={1}\n          centeredSlides={true}\n          lazy={true}\n          pagination={{\n            type: \"progressbar\",\n          }}\n          grabCursor={true}\n          onSwiper={(swiper) => console.log(swiper)}\n          onSlideChange={(swiper) => {\n            const activeSlide = swiper.activeIndex + 1;\n            //$(\".active-slide\").html(activeSlide);\n          }}\n        >\n          <SwiperSlide>\n            <div className={styles.custom}>\n              <div className={styles.title}>\n                <div className={styles.up}>\n                  <h3 ref={(el) => (title1 = el)}>Crown</h3>\n                </div>\n                <div className={styles.down}>\n                  <h3 ref={(el) => (titleSpan1 = el)}>Clothing</h3>\n                </div>\n              </div>\n\n              <img src=\"/images/about.jpg\" alt=\"\" />\n              <div className={styles.num}>\n                <h6>\n                  <span ref={(el) => (num1 = el)}>01</span>\n                </h6>\n              </div>\n            </div>\n          </SwiperSlide>\n          <SwiperSlide>\n            <div className={styles.custom}>\n              <div className={styles.title}>\n                <div className={styles.up}>\n                  <h3 ref={(el) => (title2 = el)}>Crown</h3>\n                </div>\n                <div className={styles.down}>\n                  <h3 ref={(el) => (titleSpan2 = el)}>Clothing</h3>\n                </div>\n              </div>\n\n              <img src=\"/images/contact.jpeg\" alt=\"\" />\n              <div className={styles.num}>\n                <h6>\n                  <span ref={(el) => (num2 = el)}>02</span>\n                </h6>\n              </div>\n            </div>\n          </SwiperSlide>\n          <SwiperSlide>\n            <div className={styles.custom}>\n              <div className={styles.title}>\n                <div className={styles.up}>\n                  <h3 ref={(el) => (title3 = el)}>Crown</h3>\n                </div>\n                <div className={styles.down}>\n                  <h3 ref={(el) => (titleSpan3 = el)}>Clothing</h3>\n                </div>\n              </div>\n\n              <img src=\"/images/portfolio2.jpeg\" alt=\"\" />\n              <div className={styles.num}>\n                <h6>\n                  <span ref={(el) => (num3 = el)}>03</span>\n                </h6>\n              </div>\n            </div>\n          </SwiperSlide>\n        </Swiper>\n\n         <div className=\"progress\">\n          <div className=\"active-slide\">\n            <h3>1</h3>\n          </div>\n          <h6>03</h6>\n        </div> \n      </div> */}\n      Projects\n    </div>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}